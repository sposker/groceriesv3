<FunctionsBarButton>
    user_font_size: '36sp'
    size_hint: 1/7, 1
    theme_text_color: 'Custom'
    text_color: app.theme_cls.primary_color
    tooltip_bg_color: app.bg_color
    tooltip_text_color: app.text_color


<ListFunctionsBar>
    size_hint: 1, .1

    FunctionsBarButton:
        name: 'toggle_asc_desc'
        icon: "sort-descending"
        tooltip_text: "Current: Descending"

    FunctionsBarButton:
        name: 'alphabetical'
        icon: "sort-alphabetical"
        tooltip_text: 'SortBy: A-Z'
        group: 'members'

    FunctionsBarButton:
        name: 'group'
        icon: "cards-outline"
        tooltip_text: 'SortBy: Group'
        group: 'members'

    FunctionsBarButton:
        name: 'time'
        icon: "clock-fast"
        tooltip_text: "SortBy: Time Added"
        group: 'members'
        text_color: app.theme_cls.accent_color

    FunctionsBarButton:
        name: 'open'
        icon: "folder-open-outline"
        tooltip_text: 'Load List'

    FunctionsBarButton:
        name: 'reset'
        icon: "restart"
        tooltip_text: 'Clear List'

    FunctionsBarButton:
        name: 'save'
        icon: "content-save-outline"
        tooltip_text: 'Save List'


<PredictiveButton>
    font_size: 24
    theme_text_color: 'Custom'
    text_color: app.text_color
    halign: 'left'
    size_hint: None, None
    size: self.width, self.height

<PredictiveDropdown>

    canvas:
        Color:
            rgba: app.bg_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: 0, 0, 25, 25
    canvas.after:
        Color:
            rgba: app.theme_cls.primary_color
        Line:
            width: 1.1
            rounded_rectangle:
                (self.x, self.y, self.width, self.height,\
                25, 25, 0, 0,\
                self.height)

    padding: dp(16)


<WinSearchBar>
    field: field
    _instance_icon_left: icon_left
    active_color: app.elem_color_list
    color: app.elem_color
    color_mode: 'custom'
    disabled_color: 0,0,0,0
    focus: False
    icon_left_color: app.text_color
    multiline: False
    normal_color: app.bg_color
    orientation: 'vertical'
    size_hint: 1, .105
    text: 'Coming Soon.'
    write_tab: False

#    radius_bottom: dp(25)


    BoxLayout:
        id: box
        size_hint: None, None
        size: root.size[0], dp(48)
        pos_hint: {'center_x': .5}

        canvas:
            Color:
                rgba: root._current_color
            RoundedRectangle:
                size: self.size
                pos: self.pos
                radius: [root.radius, root.radius, root.radius_bottom, root.radius_bottom]
        canvas.after:
            Color:
                rgba: root._outline_color
            Line:
                width: 1.1
                rounded_rectangle:
                    (self.x, self.y, self.width, self.height,\
                    root.radius_bottom, root.radius_bottom, root.radius, root.radius,\
                    self.height)

        MDIconButton:
            id: icon_left

            disabled: True
            icon: root.icon_left
            theme_text_color: 'Custom'
            text_color: root.icon_left_color
            user_font_size: dp(24)
            pos_hint: {"center_y": .5}

        SearchTextInput:
            id: field
            root: root

            background_active: f'{images_path}transparent.png'
            background_normal: f'{images_path}transparent.png'
            focus: root.focus
            cursor_color: app.text_color
            font_family: root.font_family
            font_name: root.font_name
            font_size: sp(24)
            foreground_color: app.text_color
            hint_text: ''
            hint_text_color: app.text_color
            multiline: False
            padding: (box.height / 2) - (self.line_height / 2)
            selection_color: app.theme_cls.primary_color[:3] +[.6]
            text: ''
            text_validate_unfocus: False
            write_tab: root.write_tab

            on_focus:
                root._on_focus(self)
            on_text:
                root.text = self.text
            on_text_validate:
                root.dispatch("on_text_validate")

        Widget:
            size_hint_x: None
            width: dp(48)
